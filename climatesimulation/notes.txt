1 more spheres towards the center



1 take testPicturePosition.html 
2 map it to small colored balls with no gravity (ie add demo, add visual, then nothing)
if it is the right sphere then continue



















1 pull from laptop and sync with desktop

#1 a large atmosphere type / large atmosphere layer
#2 no "on collision" detection, 
run on things that aren't asleep using lists 
#3 increase steps slowly to 600 (too slow)
4 make like earth (whether with a designer or the other thing)
5 cook the earth (slider for co2, water vapor, natural disasters)





1 finish up mapping to 

1 i am dropdown (god,g-d,allah,nothing, the vegan omnipresence,
2 i want to destroy the disbelievers/believers (based on previous choice)
3 but first I have to create the earth

1 co2 level
2 atmospheric moisture
  (both reduce emissions, one by more)
3 relate heat to real temperatures (but internally just use "heat")
4 specific disasters (like yellowstone)
  

 


1 17 fps is fine when you aren't going for speed (ie slow down steps essentially to deal with slowness)
2


1 %visibility (basically to test speed issues)
2












1 test sap broadphase



1 save example
2 object oriented framework for climate change simulation
  a conductivity
  b visibility (on/off)
  c filter group (view-source:http://schteppe.github.io/cannon.js/demos/collisionFilter.html)
  d density (ie mass) probably wont be that useful
  e layer (create equally all around in different layers)
  f light (chance of changing to heat)
  g colors
  h reflectivity  
  i change in color based on heat
  j axial tilt
  k sleepiness
  l size
reduce emissions
  save example
2 add in spheres that are invisible (ie air)
3 land/water has higher mass
4 light passes through invisible, but heat can get trapped
5 give different light to heat values for land/air/poles
6 poles are just land values with a low enough score to turn white
  they then have a lower light to heat value





1 finish the first chart
   (save current example
  #a add green and blue balls
  #b emissions are red
  c for each y coordinate show the average temperature over 100 seconds for each second
    (ie 1 number for average temp, x axis is y coordinates or something like that)
  d add a "reduce emissions over time" variable to simulate climate change  



1 make the light rotate around the x and z axis to simulate spinning (probably easier than making the whole thing spin)
  a do a tiny little sun on a rotational vector (or it can be completely black or even not having a mesh
  b compute a random point near it and aim like the gravity thing (only one push instead of acceleration)
  
  
1 heat distribution map

1 slow collisions down maybe (possibly reduce solver to 1)
2 change heat given off to green



4 represent escaping heat (have some random particles bouncing off of the outside that start out black
  collide, and then turn red, and then dissapear



1 figure out collision detection
2 each atmosphere should transfer heat on collision
3 they should change color based on that




1 create a sphere
2 create a really small sphere